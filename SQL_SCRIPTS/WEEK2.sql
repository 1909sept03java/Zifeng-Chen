CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID NUMBER PRIMARY KEY,
    EMP_FIRSTNAME VARCHAR2(100),
    EMP_LASTNAME VARCHAR2(100),
    DEPARTMENT_ID NUMBER ,
    SALARY NUMBER,
    EMP_EMAIL VARCHAR2(100)
);
CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID NUMBER PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(100)
);

Select * from dual;
CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 100
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_DEPARTMENT_PK
START WITH 10
INCREMENT BY 1;
/ 
CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT --SPECIFY OPERATION, BEFORE/AFTER, AND TABLE 
FOR EACH ROW
BEGIN
    SELECT SQ_DEPARTMENT_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;




INSERT ALL
    INTO EMPLOYEE
        VALUES (100,'Steven','King',10,24000,'SKING')
    INTO EMPLOYEE
        VALUES (101,'Neena','Kochhar',10,17000,'NKOCHHAR')
    INTO EMPLOYEE
        VALUES (102,'Lex','De Haan',20,17000,'LDEHAAN')
    INTO EMPLOYEE
        VALUES (103,'Alexander','Hunold',20,9000,'AHUNOLD')
    INTO EMPLOYEE
        VALUES (104,'Bruce','Ernst',20,4800,'BERNST')
    INTO EMPLOYEE
        VALUES (105,'David','Austin',30,4200,'DAUSTIN')
Select * from dual;
INSERT ALL 
    INTO DEPARTMENT
        VALUES (10,'Administration')
    INTO DEPARTMENT
        VALUES (20,'Marketing')
    INTO DEPARTMENT
        VALUES (30,'Purchasing')
SELECT * FROM DUAL;


CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(D_ID IN NUMBER, AVERAGE OUT NUMBER)
IS
TEMP INTEGER:= 0;
BEGIN
    SELECT COUNT(SALARY) INTO TEMP
        FROM EMPLOYEE
    WHERE D_ID = DEPARTMENT_ID;
    
    IF (TEMP = 0) THEN
       -- DBMS_OUTPUT.PUT_LINE('TEST');    
        average := 0;
    ELSE
        UPDATE EMPLOYEE
            SET SALARY = SALARY * 1.1
        WHERE D_ID = DEPARTMENT_ID;
        COMMIT;
        SELECT AVG(SALARY) INTO AVERAGE
            FROM EMPLOYEE
         WHERE D_ID = DEPARTMENT_ID;
    end if;
END;

CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE_VALUE(D_ID IN NUMBER, VAL IN NUMBER, AVERAGE OUT NUMBER)
IS
TEMP INTEGER:= 0;
BEGIN
    SELECT COUNT(SALARY) INTO TEMP
        FROM EMPLOYEE
    WHERE D_ID = DEPARTMENT_ID;
    
    IF (TEMP = 0) THEN
       -- DBMS_OUTPUT.PUT_LINE('TEST');    
        average := 0;
    ELSE
        UPDATE EMPLOYEE
            SET SALARY = SALARY * VAL
        WHERE D_ID = DEPARTMENT_ID;
        COMMIT;
        SELECT AVG(SALARY) INTO AVERAGE
            FROM EMPLOYEE
         WHERE D_ID = DEPARTMENT_ID;
    end if;
END;


DECLARE 
    AVERAGE NUMBER;
    VALID NUMBER;
BEGIN
    SP_GIVE_RAISE_VALUE(10,.4,AVERAGE);
    DBMS_OUTPUT.PUT_LINE(AVERAGE);
END;